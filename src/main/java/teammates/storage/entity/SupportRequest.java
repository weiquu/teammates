package teammates.storage.entity;

import java.time.Instant;
import java.util.UUID;

import com.googlecode.objectify.annotation.Entity;
import com.googlecode.objectify.annotation.Id;
import com.googlecode.objectify.annotation.Index;
import com.googlecode.objectify.annotation.OnSave;
import com.googlecode.objectify.annotation.Translate;

import teammates.common.datatransfer.SupportRequestStatus;
import teammates.common.datatransfer.SupportRequestType;

/**
 * Represents a support request entity
 */

@Entity
@Index
public class SupportRequest extends BaseEntity {

    @Id
    private String id;

    private String name;

    private String email;

    @Translate(InstantTranslatorFactory.class)
    private Instant createdAt;

    @Translate(InstantTranslatorFactory.class)
    private Instant updatedAt;

    private SupportRequestType type;

    private String message;

    private SupportRequestStatus status;

    @SuppressWarnings("unused")
    private SupportRequest() {
        // required by Objectify
    }

    /**
     * Instantiates a new support request, with id auto-generated, default status, and time fields filled automatically.
     * 
     * @param name the name of the user submitting the support request
     * @param email the email of the user submitting the support request
     * @param type the type of the support request
     * @param message the message of the support request
     */
    public SupportRequest(String name, String email, SupportRequestType type, String message) {
        //setId(null); // Auto-generated by Cloud Datastore
        UUID uuid = UUID.randomUUID();
        setId(uuid.toString());
        setName(name);
        setEmail(email);
        this.setCreatedAt(Instant.now());
        this.setUpdatedAt(Instant.now());
        setType(type);
        setMessage(message);
        setStatus(SupportRequestStatus.NEW);
    }

    /**
     * Instantiates a new support request, with all fields passed in as parameters.
     * This is mainly for conversion from attributes to entity.
     */
    public SupportRequest(String id, String name, String email, Instant createdAt, Instant updatedAt,
            SupportRequestType type, String message, SupportRequestStatus status) {
        setId(id);
        setName(name);
        setEmail(email);
        if (createdAt == null) {
            this.setCreatedAt(Instant.now());
        } else {
            this.setCreatedAt(createdAt);
        }
        if (updatedAt == null) {
            this.setUpdatedAt(Instant.now());
        } else {
            this.setUpdatedAt(updatedAt);
        }
        setType(type);
        setMessage(message);
        setStatus(status);

        assert this.createdAt != null;
        assert this.updatedAt != null;
    }


    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Instant getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Instant createdAt) {
        this.createdAt = createdAt;
    }

    public Instant getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(Instant updatedAt) {
        this.updatedAt = updatedAt;
    }

    public SupportRequestType getType() {
        return type;
    }

    public void setType(SupportRequestType type) {
        this.type = type;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public SupportRequestStatus getStatus() {
        return status;
    }

    public void setStatus(SupportRequestStatus status) {
        this.status = status;
    }

    /**
     * Updates the updatedAt timestamp when saving.
     */
    @OnSave
    public void updateLastUpdateTimestamp() {
        this.setUpdatedAt(Instant.now());
    }
}